<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="Url">
      <Property name="creationType">com.bstek.bdf3.security.domain.Url</Property>
      <PropertyDef name="id">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="name">
        <Property></Property>
        <Property name="label">名称</Property>
      </PropertyDef>
      <PropertyDef name="icon">
        <Property></Property>
        <Property name="label">图标</Property>
      </PropertyDef>
      <PropertyDef name="path">
        <Property></Property>
        <Property name="label">路径</Property>
      </PropertyDef>
      <PropertyDef name="navigable">
        <Property name="dataType">boolean</Property>
        <Property name="label">可导航</Property>
        <Property name="defaultValue">true</Property>
      </PropertyDef>
      <PropertyDef name="parentId">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="order">
        <Property name="dataType">Integer</Property>
        <Property name="label">排序号</Property>
      </PropertyDef>
      <PropertyDef name="description">
        <Property name="label">描述</Property>
      </PropertyDef>
      <PropertyDef name="children">
        <Property name="dataType">[SELF]</Property>
      </PropertyDef>
    </DataType>
    <DataType name="PasswordChange">
      <PropertyDef name="oldPassword">
        <Property name="required">true</Property>
        <Property name="label">旧密码</Property>
        <Validator name="validator1" type="ajax">
          <Property name="service">userController#validateOldPassword</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="newPassword">
        <Property name="required">true</Property>
        <Property name="label">新密码</Property>
        <Validator name="validator1" type="custom">
          <ClientEvent name="onValidate">if (arg.data != arg.entity.get(&quot;comfirmNewPassword&quot;)) {
	arg.result = &quot;两次密码输入不相同。&quot;
} else {
	arg.entity.setMessages(&quot;comfirmNewPassword&quot;, null);
}

</ClientEvent>
        </Validator>
      </PropertyDef>
      <PropertyDef name="confirmNewPasswod">
        <Property name="required">true</Property>
        <Property name="label">确认新密码</Property>
        <Validator name="validator1" type="custom">
          <ClientEvent name="onValidate">if (arg.data != arg.entity.get(&quot;newPassword&quot;)) {
	arg.result = &quot;两次密码输入不相同。&quot;
} else {
	arg.entity.setMessages(&quot;newPassword&quot;, null);
}
</ClientEvent>
        </Validator>
      </PropertyDef>
    </DataType>
  </Model>
  <View>
    <ClientEvent name="onReady" signature="self,arg,tabControl">window.openTab = function (caption, icon, path) {
	if (!path) {
		return;
	}
	var tab = tabControl.getTab(path);
	if (!tab) {
		tab = {
			$type: &quot;IFrame&quot;,
			name: path,
			caption: caption,
			path: path,
			closeable: true
		}
		if (icon.indexOf(&quot;.png&quot;) == -1 &amp;&amp; icon.indexOf(&quot;.svg&quot;) == -1) {
			tab.iconClass = icon;
		} else {
			tab.icon = icon;
		}
		tab = tabControl.addTab(tab);
	}
	tabControl.set(&quot;currentTab&quot;, tab);
	
};

window.refreshTab = function (caption, icon, path) {
	var tab = tabControl.getTab(path);
	if (tab) {
		tab.refresh();
	}
	
}</ClientEvent>
    <ClientEvent name="onClick" signature="self,arg,personalCenter">personalCenter.hide();
</ClientEvent>
    <Property name="packages">font-awesome,entypo,colors</Property>
    <Property name="skin">${bdf3.framework.skin}</Property>
    <Property name="exClassName">main</Property>
    <DataSet id="dsQuery">
      <Property name="dataType">[Url]</Property>
    </DataSet>
    <DataSet id="dsUrl">
      <Property name="dataType">[Url]</Property>
      <Property name="dataProvider">frameworkController#loadUrlForLoginUser</Property>
    </DataSet>
    <Container layoutConstraint="top">
      <Property name="height">64</Property>
      <Property name="exClassName">top</Property>
      <Container layout="native">
        <Property name="exClassName">banner</Property>
        <Label>
          <Property name="text">${empty loginUser.organization.name ? configure['bdf3.appName'] : loginUser.organization.name}</Property>
          <Property name="exClassName">app-name</Property>
        </Label>
        <Control>
          <ClientEvent name="onClick" signature="self,arg,personalCenter">personalCenter.show({
	anchorTarget: self,
	vAlign: &quot;bottom&quot;,
	offsetLeft: -8
});
arg.returnValue = false;</ClientEvent>
          <Property name="exClassName">personal-center-btn</Property>
        </Control>
        <FloatPanel id="personalCenter">
          <Property name="width">320</Property>
          <Property name="exClassName">personal-center</Property>
          <Property name="showAnimateType">slide</Property>
          <Property name="shadowMode">sides</Property>
          <Property name="closeable">true</Property>
          <Property name="showCaptionBar">true</Property>
          <Property name="height">230</Property>
          <Buttons/>
          <Children>
            <Container layout="hbox padding:15;regionPadding:20" layoutConstraint="center">
              <Control>
                <Property name="exClassName">avatar</Property>
                <Property name="width">100</Property>
                <Property name="height">100</Property>
              </Control>
              <Container layout="vbox pack:center">
                <Label>
                  <Property name="text">${loginUser.nickname}</Property>
                  <Property name="exClassName">nickname</Property>
                </Label>
                <Label>
                  <Property name="text">${loginUsername}</Property>
                  <Property name="exClassName">username</Property>
                </Label>
                <Button>
                  <Property name="caption">个人详情</Property>
                  <Property name="ui">highlight</Property>
                </Button>
              </Container>
            </Container>
            <Container layout="padding:12" layoutConstraint="bottom">
              <Property name="height">50</Property>
              <Property name="exClassName">buttons</Property>
              <Button>
                <ClientEvent name="onClick" signature="self,arg,dialogPassword,personalCenter">personalCenter.hide();
dialogPassword.show();

</ClientEvent>
                <Property name="caption">修改密码</Property>
              </Button>
              <Button layoutConstraint="right">
                <ClientEvent name="onClick">window.location.href = &quot;${configure['bdf3.logoutPath']}&quot;
</ClientEvent>
                <Property name="caption">退出</Property>
              </Button>
            </Container>
          </Children>
          <Tools/>
        </FloatPanel>
      </Container>
    </Container>
    <Control layoutConstraint="top">
      <Property name="height">10</Property>
      <Property name="exClassName">d-tabbar</Property>
    </Control>
    <SplitPanel>
      <Property name="position">200</Property>
      <Property name="exClassName">workarea</Property>
      <MainControl>
        <TabControl id="tabControl">
          <Property name="showMenuButton">true</Property>
          <Property name="tabPlacement">top</Property>
          <ControlTab>
            <Property name="iconClass">${configure['bdf3.welcomeIcon']}</Property>
            <Property name="caption">${configure['bdf3.welcomeTitle']}</Property>
            <Property name="ignored">${empty configure['bdf3.welcomePath']}</Property>
            <SubViewHolder>
              <Property name="subView">${configure['bdf3.welcomePath']}</Property>
            </SubViewHolder>
          </ControlTab>
        </TabControl>
      </MainControl>
      <SideControl>
        <Panel layout="padding:5;regionPadding:10">
          <ClientEvent name="onCreateDom">$(arg.dom)
	.find(&quot;.d-caption-bar&quot;)
	.css(&quot;height&quot;, &quot;30px&quot;)
	.find(&quot;.caption&quot;)
	.css({
		&quot;height&quot;: &quot;30px&quot;,
		&quot;line-height&quot;: &quot;30px&quot;
	});
</ClientEvent>
          <Buttons/>
          <Children>
            <TextEditor>
              <ClientEvent name="onKeyDown" signature="self,arg,dsUrl,dsQuery,dtUrl">if (arg.keyCode === 13) {
	return;
}
window.clearTimeout(self.urlQueryTimeout);
self.urlQueryTimeout = window.setTimeout(function() {
	var key = self.get(&quot;value&quot;);
	var urls = dsUrl.getData();
	var result = [];
	var parseUrls = function(urls, result) {
		if (urls.entityCount &lt;= 0) {
			return;
		}
		urls.each(function(url) {
			var name = url.get(&quot;name&quot;) || &quot;&quot;;
			var description = url.get(&quot;description&quot;) || &quot;&quot;;
			if (name.indexOf(key) != -1 || description.indexOf(key) != -1) {
				result.push(url.toJSON());
			}
			parseUrls(url.get(&quot;children&quot;), result);
		});
	};
	if (!key) {
		dtUrl.set(&quot;dataSet&quot;, dsUrl);
		return;
	}
	parseUrls(urls, result);
	dsQuery.setData(result);
	dtUrl.set(&quot;dataSet&quot;, dsQuery);
}, 150);</ClientEvent>
              <Property name="trigger">triggerQuery</Property>
              <Property name="blankText">搜索</Property>
            </TextEditor>
            <DataTree id="dtUrl">
              <ClientEvent name="onRenderNode">var data = arg.node.get(&quot;data&quot;);
var icon = data.get(&quot;icon&quot;) || &quot;&quot;;
if (icon.indexOf(&quot;.png&quot;) == -1 &amp;&amp; icon.indexOf(&quot;.svg&quot;) == -1) {
	if (icon != arg.node.get(&quot;iconClass&quot;)) {
		arg.node.set(&quot;iconClass&quot;, icon);
	}
} else {
	if (icon != arg.node.get(&quot;icon&quot;)) {
		arg.node.set(&quot;icon&quot;, icon);
	}
}
$(arg.dom).text(data.get(&quot;name&quot;) || &quot;&quot;);
</ClientEvent>
              <ClientEvent name="onDataNodeCreate">var data = arg.node.get(&quot;data&quot;);
var icon = data.get(&quot;icon&quot;) || &quot;&quot;;
if (icon.indexOf(&quot;.png&quot;) == -1 &amp;&amp; icon.indexOf(&quot;.svg&quot;) == -1) {
	if (icon != arg.node.get(&quot;iconClass&quot;)) {
		arg.node.set(&quot;iconClass&quot;, icon);
	}
} else {
	if (icon != arg.node.get(&quot;icon&quot;)) {
		arg.node.set(&quot;icon&quot;, icon);
	}
}
$(arg.dom).text(data.get(&quot;name&quot;) || &quot;&quot;);
</ClientEvent>
              <ClientEvent name="onDataRowClick">var url = self.get(&quot;currentEntity&quot;);
window.openTab(url.get(&quot;name&quot;), url.get(&quot;icon&quot;), url.get(&quot;path&quot;));
</ClientEvent>
              <ClientEvent name="onDataRowDoubleClick">var url = self.get(&quot;currentEntity&quot;);
window.refreshTab(url.get(&quot;name&quot;), url.get(&quot;icon&quot;), url.get(&quot;path&quot;));
</ClientEvent>
              <Property name="dataSet">dsUrl</Property>
              <Property name="currentNodeDataPath">currentNode</Property>
              <Property name="draggable">false</Property>
              <Property name="showLines">true</Property>
              <BindingConfigs>
                <BindingConfig>
                  <Property name="childrenProperty">children</Property>
                  <Property name="labelProperty">name</Property>
                  <Property name="recursive">true</Property>
                  <Property name="tipProperty">description</Property>
                  <Property name="name">name</Property>
                </BindingConfig>
              </BindingConfigs>
            </DataTree>
          </Children>
          <Tools/>
        </Panel>
      </SideControl>
    </SplitPanel>
    <Trigger id="triggerQuery">
      <ClientEvent name="onExecute">console.log(1)
</ClientEvent>
      <Property name="iconClass">fa fa-search blue-text</Property>
    </Trigger>
    <Dialog id="dialogPassword">
      <Property name="caption">密码修改</Property>
      <Property name="width">400</Property>
      <Property name="height">250</Property>
      <Buttons>
        <Button>
          <ClientEvent name="onClick">self.get(&quot;parent&quot;).hide();
</ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="width">60</Property>
        </Button>
        <Button>
          <ClientEvent name="onClick" signature="self,arg,ajaxActionChangePassword,autoFormPassword">var newPassword = autoFormPassword.get(&quot;entity&quot;).get(&quot;newPassword&quot;);
console.log(autoFormPassword.get(&quot;entity&quot;))
if (autoFormPassword.validate()) {
	ajaxActionChangePassword.set(&quot;parameter&quot;, {
		username: &quot;${loginUsername}&quot;,
		newPassword: newPassword
	}).execute(function() {
		self.get(&quot;parent&quot;).hide();
		autoFormPassword.get(&quot;entity&quot;).reset();
	});

}
</ClientEvent>
          <Property name="caption">确认</Property>
          <Property name="width">60</Property>
          <Property name="ui">highlight</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="autoFormPassword">
          <Property name="dataType">PasswordChange</Property>
          <Property name="cols">*</Property>
          <Property name="labelAlign">right</Property>
          <Property name="createPrivateDataSet">true</Property>
          <AutoFormElement>
            <Property name="name">oldPassword</Property>
            <Property name="property">oldPassword</Property>
            <Property name="editorType">PasswordEditor</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">newPassword</Property>
            <Property name="property">newPassword</Property>
            <Property name="editorType">PasswordEditor</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">confirmNewPasswod</Property>
            <Property name="property">confirmNewPasswod</Property>
            <Property name="editorType">PasswordEditor</Property>
            <Editor/>
          </AutoFormElement>
        </AutoForm>
        <AjaxAction id="ajaxActionChangePassword">
          <Property name="service">userController#changePassword</Property>
          <Property name="executingMessage">正在执行……</Property>
          <Property name="successMessage">密码修改成功。</Property>
        </AjaxAction>
      </Children>
      <Tools/>
    </Dialog>
  </View>
</ViewConfig>
